# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rArVkIJJ29bsvAXLA-f6A8tpkMGRoGOi
"""

class Molecule:
  
  elements=('O', 'N', 'C', 'P', 'H', 'Mg')
  bonds=(1, 2, 3)

# инициализируем словари для связей и атомов
  def __init__(self): 
    self._bond = {}
    self._atoms = {}


# добавляем атомы с помощью маппирования(умолчанию строку, по умолчанию ничего). Если пустой мап, тогда ищем последний атом и добавляем его после. Так же проверка на заглавие введенного элемента 
  def add_atoms(self, atom: str, map_=None):
    if map_ is None:
      map_ = max(self._atoms, default=0) + 1
    elif map_< 0:
      raise ValueError
    elif atom.upper() not in self.elements:
      raise TypeError

    self._atoms[map_]=atom
    self._bond[map_]={}
    return self._atoms

# Итерируем атомы 
  def __iter__(self):
    atoms = [(k, v) for k, v in self._atoms.items()]
    return iter(atoms)

# создаем связи между двумя атомами
  def add_bonds(self, a1, a2, bond):
    n1 = self._bond[a1]
    n2 = self._bond[a2]
    if n1 is n2:
      raise ValueError
    elif a2 in n1:
      raise KeyError
    n1[a2] = bond
    n2[a1] = bond

# удаление связей
  def del_bond(self, a1, a2):
    del self._bond[a1]
    del self._bond[a2]

if __name__ == "__main__":
  
  m = Molecule()
  m1 = m.add_atoms('C', 1)
  m2 = m.add_atoms('C', 2)
  m.add_atoms('C', 3)
  m.add_atoms('C', 4)
  print(m.add_atoms('H', 5))
  

